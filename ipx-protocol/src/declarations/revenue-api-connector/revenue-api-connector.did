type EndpointConfig = record {
  name : text;
  url : text;
  auth_header : opt text;
  data_path : text;
  update_frequency : nat64;
};

type RevenueData = record {
  source : text;
  amount : nat;
  timestamp : nat;
  data_hash : text;
};

type OracleStats = record {
  total_requests : nat64;
  successful_requests : nat64;
  failed_requests : nat64;
  last_update : nat;
  total_endpoints : nat;
};

type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : nat; Err : text };

service : {
  add_endpoint : (EndpointConfig) -> (Result);
  remove_endpoint : (text) -> (Result);
  fetch_revenue_data : (text) -> (Result);
  get_revenue_data : (text) -> (opt RevenueData) query;
  get_all_revenue_data : () -> (vec RevenueData) query;
  get_oracle_stats : () -> (OracleStats) query;
  get_endpoints : () -> (vec EndpointConfig) query;
  update_endpoint_auth : (text, text) -> (Result);
  get_latest_data : (text) -> (opt RevenueData) query;
}
