type StreamData = record {
  id : nat;
  sender : principal;
  recipient : principal;
  amount_per_second : nat;
  start_time : nat;
  end_time : nat;
  total_amount : nat;
  withdrawn_amount : nat;
  is_active : bool;
};

type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : nat; Err : text };

service : {
  create_stream : (principal, nat, nat) -> (Result_1);
  withdraw_from_stream : (nat) -> (Result);
  cancel_stream : (nat) -> (Result);
  get_stream : (nat) -> (opt StreamData) query;
  get_user_streams : (principal) -> (vec StreamData) query;
  get_recipient_streams : (principal) -> (vec StreamData) query;
  get_available_balance : (nat) -> (nat) query;
  get_stream_count : () -> (nat) query;
}
