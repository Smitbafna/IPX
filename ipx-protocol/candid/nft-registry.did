type TokenMetadata = record {
  name : text;
  description : text;
  image : text;
};

type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : nat; Err : text };

service : {
  // ICRC7 Standard Methods
  icrc7_collection_metadata : () -> (vec record { text; variant { Text : text; Blob : vec nat8; Nat : nat } }) query;
  icrc7_name : () -> (text) query;
  icrc7_symbol : () -> (text) query;
  icrc7_description : () -> (opt text) query;
  icrc7_logo : () -> (opt text) query;
  icrc7_total_supply : () -> (nat) query;
  icrc7_supply_cap : () -> (opt nat) query;
  icrc7_max_query_batch_size : () -> (opt nat) query;
  icrc7_max_update_batch_size : () -> (opt nat) query;
  icrc7_default_take_value : () -> (opt nat) query;
  icrc7_max_take_value : () -> (opt nat) query;
  icrc7_max_memo_size : () -> (opt nat) query;
  icrc7_atomic_batch_transfers : () -> (opt bool) query;
  icrc7_tx_window : () -> (opt nat) query;
  icrc7_permitted_drift : () -> (opt nat) query;
  
  icrc7_owner_of : (vec nat) -> (vec opt principal) query;
  icrc7_balance_of : (vec principal) -> (vec nat) query;
  icrc7_tokens : (opt principal, opt nat) -> (vec nat) query;
  icrc7_tokens_of : (principal, opt nat, opt nat) -> (vec nat) query;
  icrc7_token_metadata : (vec nat) -> (vec opt vec record { text; variant { Text : text; Blob : vec nat8; Nat : nat } }) query;
  
  // Custom Methods
  mint : (TokenMetadata) -> (Result_1);
  transfer : (principal, nat) -> (Result);
  approve : (principal, nat) -> (Result);
  get_approved : (nat) -> (opt principal) query;
  is_approved_for_all : (principal, principal) -> (bool) query;
  set_approval_for_all : (principal, bool) -> (Result);
}
