type ProposalType = variant { ParameterChange; CodeUpgrade; Treasury };

type ProposalData = record {
  title : text;
  description : text;
  proposal_type : ProposalType;
  voting_period : nat64;
};

type Proposal = record {
  id : nat64;
  proposer : principal;
  data : ProposalData;
  votes_for : nat64;
  votes_against : nat64;
  created_at : nat64;
  voting_deadline : nat64;
  executed : bool;
  voters : vec principal;
};

type GovernanceStats = record {
  total_proposals : nat64;
  active_proposals : nat64;
  total_votes_cast : nat64;
  treasury_balance : nat64;
};

type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : nat64; Err : text };

service : {
  create_proposal : (ProposalData) -> (Result_1);
  vote : (nat64, bool) -> (Result);
  execute_proposal : (nat64) -> (Result);
  grant_voting_power : (principal, nat64) -> (Result);
  get_proposal : (nat64) -> (opt Proposal) query;
  get_all_proposals : () -> (vec Proposal) query;
  get_active_proposals : () -> (vec Proposal) query;
  get_voting_power : (principal) -> (nat64) query;
  get_governance_stats : () -> (GovernanceStats) query;
}
